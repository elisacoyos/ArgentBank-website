swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/current-month:
    get:
      tags:
        - Transaction Module
      summary: Retrieves a list of all transactions for the current month
      responses:
        '200':
          description: List of transactions successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '500':
          description: Internal Server Error        
  /transactions/{transactionId}:
    get:
      tags:
        - Transaction Module
      summary: Retrieves specific details of a transaction
      responses:
        '200':
          description: Transaction details successfully retrieved
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      parameters:
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction
          type: string
  /transactions/{transactionId}/category:
    put:
      tags:
        - Transaction Module
      summary: Edits the category of a transaction
      responses:
        '200':
          description: Transaction category updated successfully
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      parameters:
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction to edit
          type: string
        - name: category
          in: body
          required: true
          description: New category for the transaction
          schema:
            type: object
            properties:
              category:
                type: string
  /transactions/{transactionId}/note:
    put:
      tags:
        - Transaction Module
      summary: Adds a personal note to a transaction
      responses:
        '200':
          description: Personal note added to the transaction successfully
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      parameters:
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction to add a note to
          type: string
        - name: note
          in: body
          required: true
          description: Personal note to add to the transaction
          schema:
            type: object
            properties:
              note:
                type: string
  /transactions/{transactionId}:
    delete:
      tags:
        - Transaction Module
      summary: Deletes a transaction
      responses:
        '200':
          description: Transaction successfully deleted
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      parameters:
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction to delete
          type: string    
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
